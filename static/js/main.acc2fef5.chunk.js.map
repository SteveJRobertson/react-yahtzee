{"version":3,"sources":["components/ActionButton/ActionButton.tsx","components/ButtonGrid/ButtonGrid.tsx","util/getRandomNumber.ts","util/getScores.ts","util/toCamelCase.ts","constants.ts","GameCtx.ts","components/Die/Die.tsx","components/Dice/Dice.tsx","components/GameHeader/GameHeader.tsx","components/ScoreButton/ScoreButton.tsx","Game.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["ActionButton","children","buttonProps","css","ButtonGrid","getRandomNumber","max","min","Math","floor","random","getNumberScore","diceScore","num","reduce","score","number","getOfKind","i","filter","dieScore","length","total","match","getConsecutive","sorted","slice","sort","consecutive","toCamelCase","string","converted","split","map","fragment","toUpperCase","join","toLowerCase","TEXT_START_GAME","POSITIONS","x","y","CATEGORIES","upper","id","name","calculator","lower","longText","matches","GameCtx","createContext","useGame","useContext","Dot","alignSelf","dieWidth","alignSelfPartial","Face","facePartial","held","position","spaceBetweenPartial","DieColumn","justifyContent","Die","width","rotation","diceState","roundStarted","onHold","isHeld","find","dieState","hold","useState","setHeld","xPos","setXPos","yPos","setYPos","useEffect","spins","onClick","Dice","forwardRef","ref","calculateWidth","newWidth","setDieWidth","rollForward","index","renderDice","GameHeader","totalScore","ScoreButton","diceIds","nanoid","defaultDiceState","Game","actionButtonText","setActionButtonText","gameStarted","setGameStarted","setRoundStarted","rolling","setRolling","roundComplete","setDiceState","rolls","setRolls","diceRef","useRef","useResizeObserver","diceWidth","setTimeout","Provider","value","dieId","updatedDiceState","disabled","console","log","rand","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.acc2fef5.chunk.js","sourcesContent":["/* @jsxImportSource @emotion/react */\nimport { jsx, css } from \"@emotion/react/macro\"; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { ButtonHTMLAttributes } from \"react\";\n\nexport const ActionButton: React.FC<\n  ButtonHTMLAttributes<HTMLButtonElement>\n> = ({ children, ...buttonProps }) => (\n  <button\n    {...buttonProps}\n    css={css`\n      background: Crimson;\n      border: none;\n      border-radius: 0;\n      bottom: 0;\n      box-sizing: border-box;\n      color: white;\n      font-family: \"Rye\", cursive;\n      font-size: 1.5rem;\n      line-height: 1.5rem;\n      padding: 1rem;\n      position: fixed;\n      text-transform: uppercase;\n      width: 100%;\n      &:active {\n        background: Gold;\n        color: black;\n      }\n      &:focus {\n        outline: none;\n      }\n    `}\n  >\n    {children}\n  </button>\n);\n","import { HTMLAttributes } from \"react\";\n/* @jsxImportSource @emotion/react */\nimport { jsx, css } from \"@emotion/react/macro\"; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nexport const ButtonGrid: React.FC<HTMLAttributes<HTMLDivElement>> = ({\n  children,\n}) => (\n  <div\n    css={css`\n      padding: 0.5rem;\n      position: relative;\n    `}\n  >\n    <div\n      css={css`\n        display: grid;\n        gap: 0.5rem 0.5rem;\n        grid-auto-flow: column;\n        grid-template-columns: repeat(2, calc(50% - 0.25rem));\n        grid-template-rows: repeat(7, 8vh);\n      `}\n    >\n      {children}\n    </div>\n  </div>\n);\n","export const getRandomNumber = (max: number, min: number) =>\n  Math.floor(Math.random() * (max + 1 - min)) + min;\n","import { DiceNumbers } from \"../types\";\n\nconst getNumberScore = (diceScore: DiceNumbers, num: number) =>\n  diceScore.reduce(\n    (score, number) => (number === num ? score + number : score + 0),\n    0\n  );\n\nconst getOfKind = (diceScore: DiceNumbers, num: number) => {\n  for (let i = 1; i <= 6; i++) {\n    const matches = diceScore.filter((dieScore) => dieScore === i);\n\n    if (matches.length >= num) {\n      return diceScore.reduce((total, match) => total + match);\n    }\n  }\n\n  return 0;\n};\n\nconst getConsecutive = (diceScore: DiceNumbers, num: number) => {\n  const sorted = diceScore.slice().sort();\n  let consecutive = 1;\n\n  for (let i = 1; i < 6; i++) {\n    if (sorted[i] === sorted[i - 1] + 1) {\n      consecutive = consecutive + 1;\n    }\n  }\n\n  return consecutive >= num ? (num - 1) * 10 : 0;\n};\n\nexport const getAces = (diceScore: DiceNumbers) => getNumberScore(diceScore, 1);\nexport const getTwos = (diceScore: DiceNumbers) => getNumberScore(diceScore, 2);\nexport const getThrees = (diceScore: DiceNumbers) =>\n  getNumberScore(diceScore, 3);\nexport const getFours = (diceScore: DiceNumbers) =>\n  getNumberScore(diceScore, 4);\nexport const getFives = (diceScore: DiceNumbers) =>\n  getNumberScore(diceScore, 5);\nexport const getSixes = (diceScore: DiceNumbers) =>\n  getNumberScore(diceScore, 6);\n\nexport const getThreeOfAKind = (diceScore: DiceNumbers) =>\n  getOfKind(diceScore, 3);\nexport const getFourOfAKind = (diceScore: DiceNumbers) =>\n  getOfKind(diceScore, 4);\nexport const getFullHouse = (diceScore: DiceNumbers) => {\n  const matches = [];\n\n  for (let i = 1; i <= 6; i++) {\n    matches[i] = diceScore.filter((dieScore) => dieScore === i);\n  }\n\n  return matches.filter((match) => match.length).length === 2 ? 25 : 0;\n};\nexport const getSmallStraight = (diceScore: DiceNumbers) =>\n  getConsecutive(diceScore, 4);\nexport const getLargeStraight = (diceScore: DiceNumbers) =>\n  getConsecutive(diceScore, 5);\nexport const getChance = (diceScore: DiceNumbers) =>\n  diceScore.reduce((total, dieScore) => total + dieScore);\nexport const getYahtzee = (diceScore: DiceNumbers) => {\n  for (let i = 1; i <= 6; i++) {\n    const matches = diceScore.filter((dieScore) => dieScore === i);\n\n    if (matches.length === 5) {\n      return 50;\n    }\n  }\n\n  return 0;\n};\n","export const toCamelCase = (string: string): string => {\n  const converted = string\n    .split(\" \")\n    .map((fragment) => fragment.slice(0, 1).toUpperCase() + fragment.slice(1))\n    .join(\"\");\n\n  return converted.slice(0, 1).toLowerCase() + converted.slice(1);\n};\n","import { DiceNumbers, DiePositions } from \"./types\";\nimport {\n  getAces,\n  getTwos,\n  getThrees,\n  getFours,\n  getFives,\n  getSixes,\n  getThreeOfAKind,\n  getFourOfAKind,\n  getFullHouse,\n  getSmallStraight,\n  getLargeStraight,\n  getChance,\n  getYahtzee,\n} from \"./util\";\n\nexport const MAX = 6;\nexport const MIN = 1;\nexport const NUM_DICE = 5;\nexport const ROLLS = 3;\nexport const TEXT_START_GAME = \"Start\";\nexport const TEXT_ROLL_DICE = \"Roll\";\nexport const TEXT_NEXT_ROUND = \"Next Round\";\n\nexport const POSITIONS: DiePositions = [\n  [\n    { x: 180, y: 1620 },\n    { x: 540, y: 1260 },\n    { x: 900, y: 900 },\n    { x: 1260, y: 540 },\n    { x: 1620, y: 180 },\n    { x: 1980, y: 1980 },\n  ],\n  [\n    { x: 0, y: 1980 },\n    { x: 360, y: 1620 },\n    { x: 720, y: 1260 },\n    { x: 1080, y: 900 },\n    { x: 1440, y: 540 },\n    { x: 1800, y: 180 },\n  ],\n  [\n    { x: 180, y: 450 },\n    { x: 540, y: 810 },\n    { x: 900, y: 1170 },\n    { x: 1260, y: 1530 },\n    { x: 1620, y: 1890 },\n    { x: 1980, y: 90 },\n  ],\n  [\n    { x: 0, y: 90 },\n    { x: 360, y: 450 },\n    { x: 720, y: 810 },\n    { x: 1080, y: 1170 },\n    { x: 1440, y: 1530 },\n    { x: 1800, y: 1890 },\n  ],\n  [\n    { x: 270, y: 1710 },\n    { x: 630, y: 1350 },\n    { x: 990, y: 990 },\n    { x: 1350, y: 630 },\n    { x: 270, y: 1710 },\n    { x: 2070, y: 0 },\n  ],\n  [\n    { x: 90, y: 270 },\n    { x: 450, y: 630 },\n    { x: 810, y: 990 },\n    { x: 1170, y: 1350 },\n    { x: 1530, y: 1710 },\n    { x: 1890, y: 2070 },\n  ],\n];\n\nexport const CATEGORIES: {\n  upper: {\n    id: string;\n    name: string;\n    calculator?: (arg0: DiceNumbers) => number;\n    longText?: boolean;\n  }[];\n  lower: {\n    id: string;\n    name: string;\n    calculator?: (arg0: DiceNumbers) => number;\n    longText?: boolean;\n  }[];\n} = {\n  upper: [\n    { id: \"aces\", name: \"Aces\", calculator: getAces },\n    { id: \"twos\", name: \"Twos\", calculator: getTwos },\n    { id: \"threes\", name: \"Threes\", calculator: getThrees },\n    { id: \"fours\", name: \"Fours\", calculator: getFours },\n    { id: \"fives\", name: \"Fives\", calculator: getFives },\n    { id: \"sixes\", name: \"Sixes\", calculator: getSixes },\n    { id: \"upperBonus\", name: \"Bonus\" },\n  ],\n  lower: [\n    {\n      id: \"threeOfAKind\",\n      name: \"Three of a Kind\",\n      calculator: getThreeOfAKind,\n      longText: true,\n    },\n    {\n      id: \"fourOfAKind\",\n      name: \"Four of a Kind\",\n      calculator: getFourOfAKind,\n      longText: true,\n    },\n    {\n      id: \"fullHouse\",\n      name: \"Full House\",\n      calculator: getFullHouse,\n      longText: true,\n    },\n    {\n      id: \"smallStraight\",\n      name: \"Small Straight\",\n      calculator: getSmallStraight,\n      longText: true,\n    },\n    {\n      id: \"largeStraight\",\n      name: \"Large Straight\",\n      calculator: getLargeStraight,\n      longText: true,\n    },\n    { id: \"chance\", name: \"Chance\", calculator: getChance, longText: true },\n    { id: \"yahtzee\", name: \"Yahtzee\", calculator: getYahtzee, longText: true },\n  ],\n};\n\nexport const NUM_CATEGORIES = CATEGORIES.upper.length + CATEGORIES.lower.length;\n","import { createContext, useContext } from \"react\";\nimport { DiceState /* , Score, ScoreType */ } from \"./types\";\n\ninterface GameContextProps {\n  diceState?: DiceState;\n  // round?: number;\n  // roundComplete?: boolean;\n  // scored?: boolean;\n  // scores?: Score[];\n  // totalLowerScore?: number;\n  // totalUpperScore?: number;\n  roundStarted?: boolean;\n  // updateScores?: (arg0: Map<ScoreType, number | null>) => void;\n  // upperScoreBonus?: number;\n  onHold?: (arg0: string) => any;\n  // onScored?: () => any;\n  diceWidth?: number;\n}\n\nexport const GameCtx = createContext<GameContextProps>({});\nexport const useGame = () => useContext(GameCtx);\n","/* @jsxImportSource @emotion/react */\nimport { jsx, css, keyframes } from \"@emotion/react/macro\"; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { HTMLAttributes, useEffect, useState } from \"react\";\nimport { MAX, MIN, POSITIONS } from \"../../constants\";\nimport { useGame } from \"../../GameCtx\";\nimport { getRandomNumber } from \"../../util\";\n\n// const spin = keyframes`\n//   from { transform: rotateX(0) rotateY(0); }\n//   to { transform: rotateX(360deg) rotateY(360deg); }\n// `;\n\n// const spinPartial = css`\n//   animation: ${spin} 2s infinite linear;\n// `;\n\n// const spinBackwards = keyframes`\n//   from { transform: rotateX(0) rotateZ(0); }\n//   to { transform: rotateX(-360deg) rotateZ(-360deg); }\n// `;\n\n// const spinBackwardsPartial = css`\n//   animation: ${spinBackwards} 2s infinite linear;\n//   transform: rotateX(-45deg) rotateZ(-45deg);\n// `;\n\ninterface DotProps {\n  alignSelf?: string;\n  dieWidth: number;\n}\n\nconst Dot: React.FC<DotProps> = ({ alignSelf, dieWidth }) => {\n  const alignSelfPartial = alignSelf\n    ? css`\n        align-self: ${alignSelf};\n      `\n    : null;\n\n  return (\n    <span\n      css={css`\n        ${alignSelfPartial}\n        display: block;\n        width: calc(${dieWidth}px * 0.2);\n        height: calc(${dieWidth}px * 0.2);\n        border-radius: 50%;\n        background-color: white;\n        box-shadow: inset calc(${dieWidth}px / 24) calc(${dieWidth}px / 24)\n          calc(${dieWidth}px / 12) rgba(0, 0, 0, 0.2);\n      `}\n    />\n  );\n};\n\ninterface FaceProps {\n  dieWidth: number;\n  held?: boolean;\n  position: string;\n}\n\nconst Face: React.FC<FaceProps & HTMLAttributes<HTMLDivElement>> = ({\n  children,\n  dieWidth,\n  held,\n  position,\n}) => {\n  const spaceBetweenPartial = css`\n    justify-content: space-between;\n  `;\n  let facePartial;\n\n  switch (position) {\n    case \"first\":\n      facePartial = css`\n        align-items: center;\n        justify-content: center;\n        transform: translateZ(calc(${dieWidth}px / 2));\n      `;\n      break;\n    case \"second\":\n      facePartial = css`\n        ${spaceBetweenPartial}\n        transform: rotateX(-180deg) translateZ(calc(${dieWidth}px / 2));\n      `;\n      break;\n    case \"third\":\n      facePartial = css`\n        ${spaceBetweenPartial}\n        transform: rotateY(90deg) translateZ(calc(${dieWidth}px / 2));\n      `;\n      break;\n    case \"fourth\":\n      facePartial = css`\n        ${spaceBetweenPartial}\n        transform: rotateY(-90deg) translateZ(calc(${dieWidth}px / 2));\n      `;\n      break;\n    case \"fifth\":\n      facePartial = css`\n        ${spaceBetweenPartial}\n        transform: rotateX(90deg) translateZ(calc(${dieWidth}px / 2));\n      `;\n      break;\n    case \"sixth\":\n      facePartial = css`\n        ${spaceBetweenPartial}\n        transform: rotateX(-90deg) translateZ(calc(${dieWidth}px / 2));\n      `;\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        box-sizing: border-box;\n        padding: 15%;\n        background-color: ${held\n          ? \"rgba(139, 0, 0, 0.85)\"\n          : \"rgba(220, 20, 60, 0.85)\"};\n        width: ${dieWidth}px;\n        height: ${dieWidth}px;\n        position: absolute;\n        ${facePartial}\n      `}\n    >\n      {children}\n    </div>\n  );\n};\n\ninterface DieColumnProps {\n  dieWidth: number;\n  justifyContent?: string;\n}\n\nconst DieColumn: React.FC<DieColumnProps & HTMLAttributes<HTMLDivElement>> = ({\n  children,\n  dieWidth,\n  justifyContent = \"space-between\",\n}) => (\n  <div\n    css={css`\n      display: flex;\n      flex-direction: column;\n      justify-content: ${justifyContent || \"space-between\"};\n      width: calc(${dieWidth}px * 0.21);\n      height: calc(${dieWidth}px * 0.7);\n    `}\n  >\n    {children}\n  </div>\n);\n\ninterface DieProps {\n  id: string;\n  number?: number;\n  rotation: \"forwards\" | \"backwards\";\n  width: number;\n}\n\nexport const Die: React.FC<DieProps> = ({ id, number, rotation, width }) => {\n  const { diceState, roundStarted, onHold } = useGame();\n\n  const isHeld = diceState\n    ? diceState.find((dieState) => dieState.id === id)?.hold\n    : false;\n\n  const [held, setHeld] = useState<boolean>(false);\n  const [xPos, setXPos] = useState<number>(0);\n  const [yPos, setYPos] = useState<number>(0);\n\n  useEffect(() => {\n    setHeld(!!isHeld);\n  }, [isHeld]);\n\n  useEffect(() => {\n    if (!number) return;\n\n    const spins = getRandomNumber(MAX, MIN) - 1;\n    const { x, y } = POSITIONS[number - 1][spins];\n\n    setXPos(x + 1800);\n    setYPos(y + 1800);\n  }, [number]);\n\n  const handleClick = () => {\n    if (roundStarted && onHold) onHold(id);\n  };\n\n  return (\n    <div\n      css={css`\n        align-items: center;\n        display: flex;\n        justify-content: center;\n      `}\n      onClick={handleClick}\n    >\n      <div\n        css={css`\n          perspective: ${width * 12}px;\n          perspective-origin: 50% ${width};\n        `}\n      >\n        <div\n          css={css`\n            position: relative;\n            width: ${width}px;\n            height: ${width}px;\n            transform-style: preserve-3d;\n            transform: rotateX(${xPos}deg) rotateY(${yPos}deg);\n            transition: transform 2s;\n          `}\n        >\n          <Face dieWidth={width} held={held} position=\"first\">\n            <Dot dieWidth={width} />\n          </Face>\n\n          <Face dieWidth={width} held={held} position=\"second\">\n            <Dot dieWidth={width} />\n            <Dot alignSelf=\"flex-end\" dieWidth={width} />\n          </Face>\n\n          <Face dieWidth={width} held={held} position=\"third\">\n            <Dot dieWidth={width} />\n            <Dot alignSelf=\"center\" dieWidth={width} />\n            <Dot alignSelf=\"flex-end\" dieWidth={width} />\n          </Face>\n\n          <Face dieWidth={width} held={held} position=\"fourth\">\n            <DieColumn dieWidth={width}>\n              <Dot dieWidth={width} />\n              <Dot dieWidth={width} />\n            </DieColumn>\n            <DieColumn dieWidth={width}>\n              <Dot dieWidth={width} />\n              <Dot dieWidth={width} />\n            </DieColumn>\n          </Face>\n\n          <Face dieWidth={width} held={held} position=\"fifth\">\n            <DieColumn dieWidth={width}>\n              <Dot dieWidth={width} />\n              <Dot dieWidth={width} />\n            </DieColumn>\n            <DieColumn dieWidth={width} justifyContent=\"center\">\n              <Dot dieWidth={width} />\n            </DieColumn>\n            <DieColumn dieWidth={width}>\n              <Dot dieWidth={width} />\n              <Dot dieWidth={width} />\n            </DieColumn>\n          </Face>\n\n          <Face dieWidth={width} held={held} position=\"sixth\">\n            <DieColumn dieWidth={width}>\n              <Dot dieWidth={width} />\n              <Dot dieWidth={width} />\n              <Dot dieWidth={width} />\n            </DieColumn>\n            <DieColumn dieWidth={width}>\n              <Dot dieWidth={width} />\n              <Dot dieWidth={width} />\n              <Dot dieWidth={width} />\n            </DieColumn>\n          </Face>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* @jsxImportSource @emotion/react */\nimport { jsx, css } from \"@emotion/react/macro\"; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport {\n  forwardRef,\n  ForwardRefExoticComponent,\n  RefAttributes,\n  useEffect,\n  useState,\n} from \"react\";\nimport { NUM_DICE } from \"../../constants\";\nimport { useGame } from \"../../GameCtx\";\nimport { Die } from \"../Die\";\n\ninterface DiceProps {\n  width: number;\n}\n\nexport const Dice: ForwardRefExoticComponent<\n  DiceProps & RefAttributes<HTMLDivElement>\n> = forwardRef(({ width }, ref) => {\n  const { diceState } = useGame();\n\n  const DICE_SPACER = 1.5;\n  const calculateWidth = (newWidth: number) =>\n    Math.floor(newWidth / NUM_DICE) -\n    16 * ((DICE_SPACER * (NUM_DICE - 1)) / NUM_DICE);\n\n  const [dieWidth, setDieWidth] = useState<number>(calculateWidth(width));\n\n  useEffect(() => {\n    setDieWidth(calculateWidth(width));\n  }, [width]);\n\n  const renderDice = () => {\n    if (!diceState) return null;\n\n    let rollForward = false;\n\n    return diceState.map(({ id, score }, index) => {\n      rollForward = !rollForward;\n      return (\n        <Die\n          id={id}\n          number={score}\n          rotation={rollForward ? \"forwards\" : \"backwards\"}\n          width={dieWidth}\n          key={index}\n        />\n      );\n    });\n  };\n\n  return (\n    <div\n      ref={ref}\n      css={css`\n        padding: 1.5rem 1.5rem 0;\n        position: relative;\n      `}\n    >\n      <div\n        css={css`\n          display: grid;\n          gap: ${DICE_SPACER}rem ${DICE_SPACER}rem;\n          grid-auto-flow: column;\n          grid-template-columns: repeat(5, ${dieWidth}px);\n          grid-template-rows: 100%;\n          height: ${dieWidth}px;\n        `}\n      >\n        {renderDice()}\n      </div>\n    </div>\n  );\n});\n","/* @jsxImportSource @emotion/react */\nimport { jsx, css } from \"@emotion/react/macro\"; // eslint-disable-line @typescript-eslint/no-unused-vars\n\ninterface GameHeaderProps {\n  totalScore: number;\n}\n\nexport const GameHeader: React.FC<GameHeaderProps> = ({ totalScore }) => (\n  <header\n    css={css`\n      align-items: center;\n      background-color: Crimson;\n      box-shadow: 0 0.5vh 2vh rgba(0, 0, 0, 0.25);\n      color: white;\n      display: flex;\n      font-family: \"Lato\", sans-serif;\n      font-size: 1.25rem;\n      height: 1.5rem;\n      justify-content: space-between;\n      padding: 0.5rem;\n      position: fixed;\n      width: 100%;\n    `}\n  >\n    <span>Score: {totalScore}</span>\n  </header>\n);\n","import { HTMLAttributes } from \"react\";\n/* @jsxImportSource @emotion/react */\nimport { jsx, css } from \"@emotion/react/macro\"; // eslint-disable-line @typescript-eslint/no-unused-vars\n\ninterface ScoreButtonProps {\n  score?: number | null;\n  name?: string;\n  longText?: boolean;\n}\n\nexport const ScoreButton: React.FC<\n  ScoreButtonProps & HTMLAttributes<HTMLButtonElement>\n> = ({ id, score, name, longText, ...buttonProps }) => (\n  <button\n    css={css`\n      align-items: center;\n      background: transparent;\n      border: 0.5vw double white;\n      border-radius: 2vh;\n      box-sizing: border-box;\n      color: white;\n      display: flex;\n      font-family: \"Rye\", cursive;\n      justify-content: space-between;\n      text-align: left;\n      text-transform: uppercase;\n      padding: 0.5rem 0.5rem 0.5rem 1rem;\n      &:active {\n        background: Gold;\n        border-color: black;\n        color: black;\n      }\n      &:focus {\n        outline: none;\n      }\n    `}\n    {...buttonProps}\n  >\n    <span\n      css={css`\n        flex: 1;\n        font-size: ${longText ? \"2.25vh\" : \"3vh\"};\n        padding-right: 3vw;\n      `}\n    >\n      {name}\n    </span>\n    {score ? (\n      <span\n        css={css`\n          align-items: center;\n          background-color: Crimson;\n          border-radius: 1vh;\n          color: white;\n          display: flex;\n          font-size: 2.5vh;\n          justify-content: center;\n          height: 5vh;\n          width: 5vh;\n        `}\n      >\n        {score}\n      </span>\n    ) : null}\n  </button>\n);\n","import { useEffect, useRef, useState } from \"react\";\n/* @jsxImportSource @emotion/react */\nimport { jsx, css } from \"@emotion/react/macro\"; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { nanoid } from \"nanoid\";\nimport useResizeObserver from \"use-resize-observer\";\nimport {\n  ActionButton,\n  ButtonGrid,\n  Dice,\n  GameHeader,\n  ScoreButton,\n} from \"./components\";\nimport {\n  CATEGORIES,\n  ROLLS,\n  MAX,\n  MIN,\n  TEXT_NEXT_ROUND,\n  TEXT_ROLL_DICE,\n  TEXT_START_GAME,\n} from \"./constants\";\nimport {\n  /* DiceNumbers,  */ DiceState /* , Scores, ScoreCategory */,\n} from \"./types\";\nimport { getRandomNumber, toCamelCase } from \"./util\";\nimport { GameCtx } from \"./GameCtx\";\n\nconst diceIds = [nanoid(), nanoid(), nanoid(), nanoid(), nanoid()];\nconst defaultDiceState: DiceState = [\n  { id: diceIds[0], hold: false, score: 0 },\n  { id: diceIds[1], hold: false, score: 0 },\n  { id: diceIds[2], hold: false, score: 0 },\n  { id: diceIds[3], hold: false, score: 0 },\n  { id: diceIds[4], hold: false, score: 0 },\n];\n\nconst Game = () => {\n  const [actionButtonText, setActionButtonText] = useState<string>(\n    TEXT_START_GAME\n  );\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n  const [roundStarted, setRoundStarted] = useState<boolean>(false);\n  const [rolling, setRolling] = useState<boolean>(false);\n  const [roundComplete /* setRoundComplete */] = useState<boolean>(false);\n  const [diceState, setDiceState] = useState<DiceState>(defaultDiceState);\n  const [rolls, setRolls] = useState<number>(0);\n  // const [turn, setTurn] = useState<number>(0);\n  // const [scored, setScored] = useState<boolean>(false);\n  // const [scores, setScores] = useState<Scores>(new Map());\n  const [totalScore /* setTotalScore */] = useState<number>(0);\n\n  const diceRef = useRef<HTMLDivElement>(null);\n\n  const { width: diceWidth = 1 } = useResizeObserver<HTMLDivElement>({\n    ref: diceRef,\n  });\n\n  useEffect(() => {\n    if (rolling) {\n      setTimeout(() => {\n        setRolling(false);\n      }, 2000);\n    }\n  }, [rolling]);\n\n  const updateActionButton = () => {\n    if (gameStarted) {\n      if (roundComplete) {\n        setActionButtonText(TEXT_NEXT_ROUND);\n        return;\n      }\n\n      setActionButtonText(`${TEXT_ROLL_DICE} (${rolls})`);\n      return;\n    }\n\n    setActionButtonText(TEXT_START_GAME);\n  };\n\n  useEffect(updateActionButton, [\n    gameStarted,\n    rolls,\n    roundComplete,\n    roundStarted,\n  ]);\n\n  const handleClick = () => {\n    if (!gameStarted) {\n      setGameStarted(true);\n      setRolls(ROLLS);\n    }\n\n    if (!roundStarted) {\n      setRoundStarted(true);\n      return;\n    }\n\n    console.log(\"CLICK\");\n\n    // Roll the dice\n    setRolling(true);\n    setDiceState(\n      diceState.map((dieState) => {\n        const { hold, score } = dieState;\n\n        if (hold) return dieState;\n\n        let rand: number;\n\n        do {\n          rand = getRandomNumber(MAX, MIN);\n\n          if (score === 0) break;\n        } while (rand === score);\n\n        return {\n          ...dieState,\n          score: rand,\n        };\n      }) as DiceState\n    );\n    setRolls(rolls - 1);\n  };\n\n  const handleHold = (dieId: string) => {\n    const dieStateToUpdate = diceState.find(({ id }) => id === dieId);\n    if (!dieStateToUpdate) return;\n\n    const updatedDiceState = diceState.map((dieState) => {\n      if (dieState.id !== dieId) return dieState;\n\n      return {\n        ...dieState,\n        hold: !dieState.hold,\n      };\n    }) as DiceState;\n\n    if (!updatedDiceState) return;\n    setDiceState(updatedDiceState);\n  };\n\n  const getScoreButtons = () =>\n    [...CATEGORIES.upper, ...CATEGORIES.lower].map(\n      ({ id, name, calculator, longText }, index) => (\n        <ScoreButton\n          key={toCamelCase(name)}\n          id={toCamelCase(name)}\n          name={name}\n          score={30}\n          longText={longText}\n        >\n          {name}\n        </ScoreButton>\n      )\n    );\n\n  return (\n    <GameCtx.Provider\n      value={{\n        diceState,\n        diceWidth,\n        roundStarted,\n        onHold: handleHold,\n      }}\n    >\n      <div\n        css={css`\n          background-color: SeaGreen;\n          color: white;\n          display: flex;\n          font-family: \"Lato\", sans-serif;\n          height: calc(100vh - 3.5rem);\n          width: 100%;\n        `}\n      >\n        {gameStarted ? (\n          <>\n            <GameHeader totalScore={totalScore} />\n            <div\n              css={css`\n                display: flex;\n                flex-direction: column;\n                height: calc(100vh - 48px);\n                padding-top: 48px;\n                max-width: 640px;\n                margin: 0 auto;\n              `}\n            >\n              <ButtonGrid>{getScoreButtons()}</ButtonGrid>\n              <Dice ref={diceRef} width={diceWidth} />\n            </div>\n          </>\n        ) : (\n          <h1\n            css={css`\n              align-self: center;\n              margin: 0 auto;\n            `}\n          >\n            React Yahtzee\n          </h1>\n        )}\n      </div>\n      <ActionButton\n        disabled={roundStarted && (rolling || rolls === 0)}\n        onClick={handleClick}\n      >\n        {actionButtonText}\n      </ActionButton>\n    </GameCtx.Provider>\n  );\n};\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/serviceWorker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}